<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-2.0.4.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- Properties file -->

	<context:property-placeholder location="classpath:spring-config.properties" />

	<bean id="vamDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:vamDS"></property>
	</bean>

	<!--<bean id="vamEmailSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="mail/VAMNotify"></property>
	</bean> 
	
	<bean id="vamEmailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="session" ref="vamEmailSource"></property>
	</bean>
	--><!--  Datasource using  JDBC
	<bean id="vampDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
-->

	<!-- Hibernate SessionFactory -->
	<bean id="vamDBSessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref local="vamDataSource" />
		</property>
		<property name="mappingResources">
			<list>
				<value>/hibernate/Somhbm.hbm.xml
				</value>
				
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
                </prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.default_schema">${jdbc.database}</prop>
				<prop key="hibernate.use_outer_join">true</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- 
		Enable annotation-based configuration. 
	-->
	<!--<context:annotation-config />
	--><!-- 	<context:component-scan base-package="com.bo.vam" />  -->

	<!--
		========================= TRANSACTION MANAGEMENT
		=========================
	-->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="vampDBSessionFactory" />
		</property>
	</bean>

	<!--
		************************Log4j
		initializer******************************
	-->

	<bean id="log4jInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:conf/log4j.xml</value>
			</list>
		</property>
	</bean>

	<bean id="loggingInterceptor" class="common.core.logging.LoggingInterceptor" />

</beans>